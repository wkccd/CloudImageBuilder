# 此工作流99% 使用luci 24.10.x 来构建 少部分使用快照版和24.05.4版本来构建
name: Build MTK Router ImmortalWrt 24.10.x

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: "请选择mtk路由器型号"
        required: true
        options:
          - glinet_gl-mt2500
          - glinet_gl-mt3000
          - glinet_gl-mt6000
          - glinet_gl-b2200
          - glinet_gl-x3000
          - glinet_gl-xe3000
          - cudy_tr3000-v1
          - cudy_tr3000-v1-ubootmod
          - cudy_tr3000-256mb-v1
          - jcg_q30-pro
          - jdcloud_re-cp-03
          - xiaomi_mi-router-ax3000t
          - xiaomi_mi-router-ax3000t-ubootmod
          - xiaomi_mi-router-wr30u-stock
          - xiaomi_mi-router-wr30u-ubootmod
          - xiaomi_redmi-router-ax6000-stock
          - xiaomi_redmi-router-ax6000-ubootmod
          - cmcc_a10-stock
          - cmcc_a10-ubootmod
          - cmcc_rax3000m
          - cmcc_rax3000me
          - cmcc_rax3000m-emmc-ubootmod
          - abt_asr3000
          - acelink_ew-7886cax
          - acer_predator-w6
          - acer_predator-w6d
          - acer_vero-w6m
          - arcadyan_mozart
          - asus_rt-ax52
          - asus_rt-ax59u
          - asus_tuf-ax4200
          - asus_tuf-ax6000
          - bananapi_bpi-r3
          - bananapi_bpi-r3-mini
          - bananapi_bpi-r4
          - bananapi_bpi-r4-poe
          - cetron_ct3003
          - cetron_ct3003-ubootmod
          - comfast_cf-e393ax
          - confiabits_mt7981
          - cudy_ap3000-v1
          - cudy_ap3000outdoor-v1
          - cudy_m3000-v1
          - cudy_re3000-v1
          - cudy_wr3000-v1
          - cudy_wr3000e-v1
          - cudy_wr3000h-v1
          - cudy_wr3000s-v1
          - dlink_aquila-pro-ai-m30-a1
          - dlink_aquila-pro-ai-m60-a1
          - edgecore_eap111
          - gatonetworks_gdsp
          - h3c_magic-nx30-pro
          - h3c_magic-nx30-pro-nmbm
          - huasifei_wh3000-emmc
          - imou_lc-hx3001
          - keenetic_kn-3811
          - keenetic_kn-3911
          - konka_komi-a31
          - livinet_zr-3020
          - livinet_zr-3020-ubootmod
          - mediatek_mt7981-rfb
          - mediatek_mt7986a-rfb-nand
          - mediatek_mt7986b-rfb
          - mediatek_mt7988a-rfb
          - mercusys_mr80x-v3
          - mercusys_mr90x-v1
          - mercusys_mr90x-v1-ubi
          - netcore_n60
          - netcore_n60-pro
          - netgear_wax220
          - netis_nx31
          - nokia_ea0326gmp
          - openembed_som7981
          - openwrt_one
          - qihoo_360t7
          - routerich_ax3000
          - routerich_ax3000-ubootmod
          - routerich_ax3000-v1
          - ruijie_rg-x60-pro
          - smartrg_sdg-8612
          - smartrg_sdg-8614
          - smartrg_sdg-8622
          - smartrg_sdg-8632
          - smartrg_sdg-8733
          - smartrg_sdg-8733a
          - smartrg_sdg-8734
          - tplink_archer-ax80-v1
          - tplink_re6000xd
          - tplink_tl-xdr4288
          - tplink_tl-xdr6086
          - tplink_tl-xdr6088
          - tplink_tl-xtr8488
          - ubnt_unifi-6-plus
          - unielec_u7981-01-emmc
          - unielec_u7981-01-nand
          - wavlink_wl-wn573hx3
          - wavlink_wl-wn586x3
          - yuncore_ax835
          - zbtlink_zbt-z8102ax
          - zbtlink_zbt-z8103ax
          - zyxel_ex5601-t0-stock
          - zyxel_ex5601-t0-ubootmod
          - zyxel_ex5700-telenor
          - zyxel_nwa50ax-pro
        default: cmcc_rax3000m-emmc-ubootmod
      custom_router_ip:
        description: "请设置路由器的管理地址 格式:192.168.x.1 或 10.x.x.1"
        required: true
        default: "192.168.100.1"
      include_docker:
        description: |
          是否编译 Docker 插件
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      enable_pppoe:
        description: "是否配置PPPoE拨号信息?"
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      pppoe_account:
        description: "宽带账号 (若启用PPPoE)"
        required: false
      pppoe_password:
        description: "宽带密码 (若启用PPPoE)"
        required: false


jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: |
          chmod +x ${{ github.workspace }}/mediatek-filogic/build24.sh
      
      - name: Save Custom Router IP into OpenWrt files
        run: |
          mkdir -p "${{ github.workspace }}/custom"
          echo "${{ github.event.inputs.custom_router_ip }}" > "${{ github.workspace }}/custom/custom_router_ip.txt"
          echo "您设置的路由器管理地址是:${{ github.event.inputs.custom_router_ip }}"
          # 后续步骤会将该文件映射到路由器/etc/config/custom_router_ip.txt 以便用于开机脚本99-custom.sh读取用户设置的ip


      - name: Validate PPPoE Inputs
        run: |
          if [[ "${{ inputs.enable_pppoe }}" == "yes" ]]; then
            if [[ -z "${{ inputs.pppoe_account }}" || -z "${{ inputs.pppoe_password }}" ]]; then
              echo "Error: PPPoE account and password must be provided when PPPoE is enabled!"
              exit 1
            fi
          fi


      - name: Build MTK ImmortalWrt 24.10.2
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          echo "platform=mediatek/filogic" >> $GITHUB_ENV
          IFS=',' read -r -a profile_array <<< "$profiles"
          if [ "$profiles" = "glinet_gl-b2200" ]; then
            # 虽然它是高通平台 但由于都是gl机型 故放在一起 找起来方便
            tag=ipq40xx-generic-openwrt-24.10.2
            echo "platform=ipq40xx/generic" >> $GITHUB_ENV
          elif [ "$profiles" = "cudy_tr3000-256mb-v1" ]; then
            # 由于256MB版本tr3000 还没有出正式版24.10.2 故使用快照版本来构建
            tag=mediatek-filogic-24.10-SNAPSHOT
            echo "platform=mediatek/filogic" >> $GITHUB_ENV
          elif [ "$profiles" = "cmcc_rax3000m-emmc-ubootmod" ]; then
            # 此机型没有24.10.2 且应该和cmcc_rax3000me应该有区别 故采用支持的23.05.4版本来构建
            tag=mediatek-filogic-openwrt-23.05.4
            echo "platform=mediatek/filogic" >> $GITHUB_ENV
          else
            tag=mediatek-filogic-openwrt-24.10.2
            echo "platform=mediatek/filogic" >> $GITHUB_ENV
          fi
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/glinet:/home/build/immortalwrt/files/etc/uci-defaults" \
              -v "${{ github.workspace }}/custom:/home/build/immortalwrt/files/etc/config" \
              -v "${{ github.workspace }}/arch/arch.conf:/home/build/immortalwrt/files/etc/opkg/arch.conf" \
              -v "${{ github.workspace }}/shell:/home/build/immortalwrt/shell" \
              -v "${{ github.workspace }}/mediatek-filogic/build24.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              -e ENABLE_PPPOE=${{ inputs.enable_pppoe }} \
              -e PPPOE_ACCOUNT=${{ inputs.pppoe_account }} \
              -e PPPOE_PASSWORD=${{ inputs.pppoe_password }} \
              immortalwrt/imagebuilder:$tag /bin/bash /home/build/immortalwrt/build.sh
          done

      - name: Create info
        run: |
          if [ "${{ github.event.inputs.include_docker }}" == "yes" ]; then
            extra_content="### 默认带docker"
            echo -e "\n $extra_content" >> ${{ github.workspace }}/mediatek-filogic/info.md
          else
            echo -e "NO docker"
          fi
          custom_router_ip="${{ github.event.inputs.custom_router_ip }}"
          extra_content_ip="#### 管理地址 $custom_router_ip"
          echo -e "\n $extra_content_ip" >> ${{ github.workspace }}/mediatek-filogic/info.md
          
          
      - name: Upload ImmortalWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: mediatek
          name: ImmortalWrt-Mediatek
          body_path: ${{ github.workspace }}/mediatek-filogic/info.md
          files: |
            ${{ github.workspace }}/bin/targets/${{ env.platform }}/*.bin
            ${{ github.workspace }}/bin/targets/${{ env.platform }}/*.itb
            ${{ github.workspace }}/bin/targets/${{ env.platform }}/*.ubi
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
